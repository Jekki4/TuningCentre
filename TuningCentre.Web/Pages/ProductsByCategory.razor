@page "/ProductsByCategory/{CategoryId:int}"
@inherits ProductsByCategoryBase
@inject TuningCentre.Web.Services.ProductService productService
@inject NavigationManager NavigationManager
@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime

@if(Products == null && ErrorMessage == null)
{
    <DisplaySpinner/>
}
else if(ErrorMessage != null)
{
    <DisplayError ErrorMessage = "@ErrorMessage" />
}
else
{
    @*@if (CategoryId == 2)
    {
        
    <div class="img_2">

            <img src="/Images/BannerIMG/banner_bmw.jpg" width="100%" height="100%">
                                                                  
        </div>                                                    
    }
    else
    {

        <div class="img_2">
            <img src="/Images/BannerIMG/banner_cadillac.jpg" width="100%" height="100%">
        </div>
        
    }*@

    @switch (CategoryId)
    {
        case 1:
            <img src="/Images/BannerIMG/banner_bmw.jpg" width="100%" height="100%">
            break;
        case 2:
            <img src="/Images/BannerIMG/banner_cadillac.jpg" width="100%" height="100%">
            break;
        case 3:
            <img src="/Images/BannerIMG/banner_mercedes2.jpg" width="100%" height="100%">
            break;
        case 4:
            <img src="/Images/BannerIMG/banner_toyota.jpg" width="100%" height="100%">
            break;
        case 5:
            <img src="/Images/BannerIMG/banner_infiniti.jpg" width="100%" height="100%">
            break;

    }

    <h3 style="text-align: center; color: papayawhip; margin-top: 150px; margin-bottom: 100px;">@CategoryName </h3>
    <hr class="featurette-divider">


    <div class="form-group" style="padding-inline: 400px;">
        <input id="search-input" class="form-control" @bind="@searchTerm" />
    </div>
    <p class="d-flex justify-content-center my-4">
        <button class="btn btn-primary" style="background-color: rgb(141, 148, 156); border-color: rgb(16, 18, 21); color: papyawhip;" @onclick="@(async () => { await Search();})">Шукати</button>
    </p>

    @if (Products.Count() > 0)
    {
        <div class="row mt-3 justify-content-lg-start">
            @if (filteredProducts != null && filteredProducts.Any())
            {
                <DisplayProducts Products="@filteredProducts" />
            }
            else if (filteredProducts == null)
            {
                <DisplayProducts Products="@Products" />
            }
        </div>
    }

}

@code {
    private IEnumerable<ProductDto> filteredProducts;
    private string searchTerm;

    private async Task Search()
    {

        if (!string.IsNullOrEmpty(searchTerm))
        {
            filteredProducts = await productService.GetItemsByCategory(CategoryId);
            filteredProducts = filteredProducts.Where(p => p.Name.Contains(searchTerm, StringComparison.InvariantCultureIgnoreCase));

        }
        else
        {
            filteredProducts = null;

        }


    }
}