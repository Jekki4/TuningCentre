@implements IDisposable
@inject IShoppingCartService shoppingCartService

<div class="container-fluid">
    <AuthorizeView>
        <Authorized>
                <div class="logo">
        
                    <a class="navbar-brand" href="">
                    <img src="RON_LOGO.png" width="100" height="70" />
                    </a>
       
            </div>

            <div class="nav-item" style="position: fixed; top: 12px; margin-left: 10%">
                <div>
                    <ul class="navbar-nav">
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" style="width: 114px; padding-inline: 10px;" href="/AllProducts" id="navbarDropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Деталi</a>
                            <div class="dropdown-menu" style="background: rgba(0, 0, 0, 0.6); color: papayawhip;" aria-labelledby="navbarDropdownMenuLink">
                                <a class="dropdown-item" href="/ProductsByCategory/3">АДМИН ХУЕСОС</a>
                            </div>
                        </li>

                    </ul>
                </div>
            </div>

            <div class="nav-item" style="margin-left: 84%;">
                <NavLink class="nav-link" href="/logout">
                    <span class="fa-solid fa-user" style="color: red;"></span>
                </NavLink>
            </div>

            <div class="nav-item">
                <NavLink class="nav-link" href="ShoppingCart">
                    <span class="fas fa-basket-shopping"></span>&nbsp;(<b>@shoppingCartItemsCount</b>)
                </NavLink>

            </div>

            <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
                <span class="fas fa-bars"></span>&nbsp;
            </button>
        </Authorized>
        <NotAuthorized>

            <div class="logo">
        
                    <a class="navbar-brand" href="">
                    <img src="RON_LOGO.png" width="100" height="70" />
                    </a>
       
            </div>

            <div class="nav-item" style="position: fixed; top: 12px; margin-left: 10%">
                <div>
                    <ul class="navbar-nav">
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" style="width: 114px; padding-inline: 10px;" href="/AllProducts" id="navbarDropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Деталi</a>
                                <div class="dropdown-menu" style="background: rgba(0, 0, 0, 0.6); color: papayawhip;" aria-labelledby="navbarDropdownMenuLink">
                                    <a class="dropdown-item" href="/ProductsByCategory/1">Спойлери</a>
                                    <a class="dropdown-item" href="/ProductsByCategory/2">Капоти</a>
                            </div>
                        </li>

                    </ul>
                </div>
            </div>
            

            <div class="nav-item" style="margin-left: 84%;">
                <NavLink class="nav-link" href="/login">
                    <span class="fa-solid fa-user"></span>
                </NavLink>
            </div>

            <div class="nav-item">
                <NavLink class="nav-link" href="/login">
                    <span class="fas fa-basket-shopping"></span>&nbsp;(<b>@shoppingCartItemsCount</b>)
                </NavLink>

            </div>

            <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
                <span class="fas fa-bars"></span>&nbsp;
            </button>
        </NotAuthorized>

    </AuthorizeView>
</div>


@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private int shoppingCartItemsCount = 0;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override void OnInitialized()
    {
        shoppingCartService.OnShoppingCartChanged += ShoppingCartChanged;
    }
    private void ShoppingCartChanged(int totalQty)
    {
        shoppingCartItemsCount = totalQty;
        StateHasChanged();
    }
    void IDisposable.Dispose()
    {
        shoppingCartService.OnShoppingCartChanged -= ShoppingCartChanged;
    }

}